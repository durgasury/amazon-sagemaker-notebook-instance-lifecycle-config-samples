AWSTemplateFormatVersion: 2010-09-09  
Description: >-
  AWS CloudFormation template to create a SageMaker notebook instance with a LifecycleConfiguration
  script that allows cloning a git repository
Parameters:
  GitRepoUrl:
    Description: URL to clone
    Type: String
  FolderName:
    Description: Name of the repository
    Type: String
  Username:
    Description: Git username
    Type: String
  SecretName:
    Description: AWS Secrets Manager secret name
    Type: String
  Email:
    Description: Email to be associated with git config
    Type: String
  Region:
    Description: AWS region
    Type: String
  SageMakerExecutionRole:
    Description: Execution role for SageMaker notebook
    Type: String
Resources:
  GitCloneNotebook:
    Type: "AWS::SageMaker::NotebookInstance"
    Properties:
      InstanceType: "ml.t3.medium"
      RoleArn: !Ref SageMakerExecutionRole
      LifecycleConfigName: !GetAtt GitCloneLCC.NotebookInstanceLifecycleConfigName
  GitCloneLCC:
    Type: "AWS::SageMaker::NotebookInstanceLifecycleConfig"
    Properties:
      OnStart:
        - Content:
            Fn::Base64: 
              !Sub |
                #!/bin/bash

                set -e
                
                # parameters
                GIT_PROVIDER='github.com'
                GIT_USERNAME=${Username}
                GIT_EMAIL=${Email}
                AWS_REGION=${Region}
                # Secret name stored in AWS Secrets Manager
                AWS_SECRET_NAME=${SecretName}
                # Secret key names inside the secret
                # Secret is stored with two key-value pairs, keys username and password
                # Replace these values if your secrets are stored as different keys
                AWS_SECRET_NAME_KEY="username"
                AWS_SECRET_PASS_KEY="password"
                REPOSITORY_URL=${GitRepoUrl}
                FOLDER=${FolderName}

                ## Script Body

                PYTHON_EXEC=$(command -v python)
                cat > ~/.aws-credential-helper.py <<EOL
                #!$PYTHON_EXEC
                import sys
                import json
                import boto3
                import botocore
                GIT_PROVIDER='$GIT_PROVIDER'
                GIT_USERNAME='$GIT_USERNAME'
                AWS_REGION='$AWS_REGION'
                AWS_SECRET_NAME='$AWS_SECRET_NAME'
                AWS_SECRET_NAME_KEY='$AWS_SECRET_NAME_KEY'
                AWS_SECRET_PASS_KEY='$AWS_SECRET_PASS_KEY'
                client = boto3.client("secretsmanager", region_name=AWS_REGION)
                credentials = {}
                try:
                    response = client.get_secret_value(SecretId=AWS_SECRET_NAME)
                except botocore.exceptions.ClientError as e:
                    print("Error reading secret")
                    print(e)
                    exit(1)
                if 'SecretString' in response:
                    secret = response['SecretString']
                    secret_dict = json.loads(secret)
                    if AWS_SECRET_PASS_KEY in secret_dict:
                        credentials['password'] = secret_dict[AWS_SECRET_PASS_KEY]
                    if AWS_SECRET_NAME_KEY in secret_dict:
                        credentials['username'] = secret_dict[AWS_SECRET_NAME_KEY]
                for key, value in credentials.items():
                    print('{}={}'.format(key, value))
                EOL

                chmod +x ~/.aws-credential-helper.py

                sudo -u ec2-user -i <<EOF
                git config --global credential.helper ~/.aws-credential-helper.py
                git config --global user.name "$GIT_USERNAME"
                git config --global user.email "$GIT_EMAIL"
                EOF
                # check if folder exists and clone
                if [ ! -d "/home/ec2-user/SageMaker/$FOLDER" ] ; then
                    git -C /home/ec2-user/SageMaker clone $REPOSITORY_URL
                # if you want to pull latest when restarting, uncomment lines below
                # else
                #     cd "$FOLDER"
                #     git pull $REPOSITORY_URL
                fi
Outputs:
  GitCloneNotebookId:
    Value: !Ref GitCloneNotebook
  GitCloneLCCId:
    Value: !Ref GitCloneLCC